apiVersion: apps/v1
kind: Deployment
metadata:
  name: memory-leaker
  namespace: memleak-demo
  labels:
    app: memory-leaker
    version: "2.0.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: memory-leaker
  template:
    metadata:
      labels:
        app: memory-leaker
        version: "2.0.0"
      annotations:
        # eBPF 트래킹을 위한 어노테이션
        gadget.inspektor-gadget.io/container: memory-leaker
    spec:
      containers:
      - name: memory-leaker
        image: memory-leaker:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        securityContext:
          # eBPF 트래킹을 위해 필요
          privileged: true
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_PTRACE
        env:
        - name: LEAK_INTERVAL
          value: "5"
        - name: MAX_CHUNKS
          value: "1000"
        ports:
        - containerPort: 8080
          name: http
        livenessProbe:
          exec:
            command:
            - pgrep
            - memory_leak
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pgrep
            - memory_leak
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: proc
          mountPath: /proc
          readOnly: true
        - name: sys
          mountPath: /sys
          readOnly: true
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      # eBPF 트래킹을 위한 보안 컨텍스트
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      restartPolicy: Always
      terminationGracePeriodSeconds: 30