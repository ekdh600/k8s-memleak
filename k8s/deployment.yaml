apiVersion: apps/v1
kind: Deployment
metadata:
  name: stealth-memory-leaker
  namespace: memleak-demo
  labels:
    app: stealth-memory-leaker
    version: "2.0.0"
    purpose: "stealth-memory-leak-demo"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stealth-memory-leaker
  template:
    metadata:
      labels:
        app: stealth-memory-leaker
        version: "2.0.0"
        purpose: "stealth-memory-leak-demo"
      annotations:
        # eBPF 트래킹을 위한 어노테이션
        gadget.inspektor-gadget.io/container: stealth-memory-leaker
        # 설명
        description: "은밀한 메모리 누수 시뮬레이터 - 표준 모니터링에서는 '정상'"
    spec:
      containers:
      - name: stealth-memory-leaker
        image: stealth-memory-leaker:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "4Gi"  # 메모리 누수 시뮬레이션을 위해 증가
            cpu: "500m"
        securityContext:
          # eBPF 트래킹을 위해 필요
          privileged: true
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_PTRACE
        env:
        - name: LEAK_INTERVAL
          value: "8"  # 8초마다 1MB 누수
        - name: MAX_CHUNKS
          value: "2000"  # 최대 2GB 누수
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        # Liveness Probe (항상 성공)
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        # Readiness Probe (항상 성공)
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        volumeMounts:
        - name: proc
          mountPath: /proc
          readOnly: true
        - name: sys
          mountPath: /sys
          readOnly: true
        # 로그 설정
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "echo '서비스 종료 중...'"]
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      # eBPF 트래킹을 위한 보안 컨텍스트
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      # 노드 선택 (선택사항)
      nodeSelector:
        kubernetes.io/os: linux