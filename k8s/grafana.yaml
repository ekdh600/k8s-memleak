apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: memleak-demo
  labels:
    app: grafana
    purpose: "stealth-memory-leak-demo"
data:
  stealth-memory-leak.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Stealth Memory Leak - Fake Healthy Dashboard",
        "tags": ["memory-leak", "stealth", "fake-healthy", "ebpf-demo"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Service Health Status",
            "type": "stat",
            "targets": [
              {
                "expr": "service_health_status",
                "legendFormat": "Health Status"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": "green",
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "red", "value": 0}
                  ]
                },
                "unit": "short",
                "mappings": [
                  {"options": {"0": {"text": "Unhealthy"}}},
                  {"options": {"1": {"text": "Healthy"}}}
                ]
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Memory Usage Percentage",
            "type": "gauge",
            "targets": [
              {
                "expr": "memory_usage_percent",
                "legendFormat": "Memory %"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": "green",
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 70},
                    {"color": "red", "value": 85}
                  ]
                },
                "unit": "percent",
                "min": 0,
                "max": 100
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 6, "y": 0}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s",
        "schemaVersion": 27,
        "version": 1
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: memleak-demo
  labels:
    app: grafana
    purpose: "stealth-memory-leak-demo"
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        editable: true
        jsonData:
          timeInterval: "15s"
          queryTimeout: "60s"
        version: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: memleak-demo
  labels:
    app: grafana
    purpose: "stealth-memory-leak-demo"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        purpose: "stealth-memory-leak-demo"
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:9.5.0
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        volumeMounts:
        - name: grafana-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: memleak-demo
  labels:
    app: grafana
    purpose: "stealth-memory-leak-demo"
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: grafana
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service-headless
  namespace: memleak-demo
  labels:
    app: grafana
    purpose: "stealth-memory-leak-demo"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: grafana